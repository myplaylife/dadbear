/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package me.littlepanda.dadbear.core.rpc;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ServiceInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ServiceInfo\",\"namespace\":\"me.littlepanda.dadbear.core.rpc\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"host\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"protocol\",\"type\":\"string\"},{\"name\":\"implement\",\"type\":\"string\"},{\"name\":\"port\",\"type\":[\"null\",\"int\"]},{\"name\":\"schedule\",\"type\":[\"null\",\"string\"]},{\"name\":\"distributeAlgo\",\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence host;
  @Deprecated public java.lang.CharSequence type;
  @Deprecated public java.lang.CharSequence protocol;
  @Deprecated public java.lang.CharSequence implement;
  @Deprecated public java.lang.Integer port;
  @Deprecated public java.lang.CharSequence schedule;
  @Deprecated public java.lang.CharSequence distributeAlgo;
  @Deprecated public java.lang.CharSequence description;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public ServiceInfo() {}

  /**
   * All-args constructor.
   */
  public ServiceInfo(java.lang.CharSequence name, java.lang.CharSequence host, java.lang.CharSequence type, java.lang.CharSequence protocol, java.lang.CharSequence implement, java.lang.Integer port, java.lang.CharSequence schedule, java.lang.CharSequence distributeAlgo, java.lang.CharSequence description) {
    this.name = name;
    this.host = host;
    this.type = type;
    this.protocol = protocol;
    this.implement = implement;
    this.port = port;
    this.schedule = schedule;
    this.distributeAlgo = distributeAlgo;
    this.description = description;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return host;
    case 2: return type;
    case 3: return protocol;
    case 4: return implement;
    case 5: return port;
    case 6: return schedule;
    case 7: return distributeAlgo;
    case 8: return description;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: host = (java.lang.CharSequence)value$; break;
    case 2: type = (java.lang.CharSequence)value$; break;
    case 3: protocol = (java.lang.CharSequence)value$; break;
    case 4: implement = (java.lang.CharSequence)value$; break;
    case 5: port = (java.lang.Integer)value$; break;
    case 6: schedule = (java.lang.CharSequence)value$; break;
    case 7: distributeAlgo = (java.lang.CharSequence)value$; break;
    case 8: description = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'host' field.
   */
  public java.lang.CharSequence getHost() {
    return host;
  }

  /**
   * Sets the value of the 'host' field.
   * @param value the value to set.
   */
  public void setHost(java.lang.CharSequence value) {
    this.host = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'protocol' field.
   */
  public java.lang.CharSequence getProtocol() {
    return protocol;
  }

  /**
   * Sets the value of the 'protocol' field.
   * @param value the value to set.
   */
  public void setProtocol(java.lang.CharSequence value) {
    this.protocol = value;
  }

  /**
   * Gets the value of the 'implement' field.
   */
  public java.lang.CharSequence getImplement() {
    return implement;
  }

  /**
   * Sets the value of the 'implement' field.
   * @param value the value to set.
   */
  public void setImplement(java.lang.CharSequence value) {
    this.implement = value;
  }

  /**
   * Gets the value of the 'port' field.
   */
  public java.lang.Integer getPort() {
    return port;
  }

  /**
   * Sets the value of the 'port' field.
   * @param value the value to set.
   */
  public void setPort(java.lang.Integer value) {
    this.port = value;
  }

  /**
   * Gets the value of the 'schedule' field.
   */
  public java.lang.CharSequence getSchedule() {
    return schedule;
  }

  /**
   * Sets the value of the 'schedule' field.
   * @param value the value to set.
   */
  public void setSchedule(java.lang.CharSequence value) {
    this.schedule = value;
  }

  /**
   * Gets the value of the 'distributeAlgo' field.
   */
  public java.lang.CharSequence getDistributeAlgo() {
    return distributeAlgo;
  }

  /**
   * Sets the value of the 'distributeAlgo' field.
   * @param value the value to set.
   */
  public void setDistributeAlgo(java.lang.CharSequence value) {
    this.distributeAlgo = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /** Creates a new ServiceInfo RecordBuilder */
  public static me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder newBuilder() {
    return new me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder();
  }
  
  /** Creates a new ServiceInfo RecordBuilder by copying an existing Builder */
  public static me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder newBuilder(me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder other) {
    return new me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder(other);
  }
  
  /** Creates a new ServiceInfo RecordBuilder by copying an existing ServiceInfo instance */
  public static me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder newBuilder(me.littlepanda.dadbear.core.rpc.ServiceInfo other) {
    return new me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for ServiceInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ServiceInfo>
    implements org.apache.avro.data.RecordBuilder<ServiceInfo> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence host;
    private java.lang.CharSequence type;
    private java.lang.CharSequence protocol;
    private java.lang.CharSequence implement;
    private java.lang.Integer port;
    private java.lang.CharSequence schedule;
    private java.lang.CharSequence distributeAlgo;
    private java.lang.CharSequence description;

    /** Creates a new Builder */
    private Builder() {
      super(me.littlepanda.dadbear.core.rpc.ServiceInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.host)) {
        this.host = data().deepCopy(fields()[1].schema(), other.host);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.protocol)) {
        this.protocol = data().deepCopy(fields()[3].schema(), other.protocol);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.implement)) {
        this.implement = data().deepCopy(fields()[4].schema(), other.implement);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.port)) {
        this.port = data().deepCopy(fields()[5].schema(), other.port);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.schedule)) {
        this.schedule = data().deepCopy(fields()[6].schema(), other.schedule);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.distributeAlgo)) {
        this.distributeAlgo = data().deepCopy(fields()[7].schema(), other.distributeAlgo);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.description)) {
        this.description = data().deepCopy(fields()[8].schema(), other.description);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ServiceInfo instance */
    private Builder(me.littlepanda.dadbear.core.rpc.ServiceInfo other) {
            super(me.littlepanda.dadbear.core.rpc.ServiceInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.host)) {
        this.host = data().deepCopy(fields()[1].schema(), other.host);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.protocol)) {
        this.protocol = data().deepCopy(fields()[3].schema(), other.protocol);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.implement)) {
        this.implement = data().deepCopy(fields()[4].schema(), other.implement);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.port)) {
        this.port = data().deepCopy(fields()[5].schema(), other.port);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.schedule)) {
        this.schedule = data().deepCopy(fields()[6].schema(), other.schedule);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.distributeAlgo)) {
        this.distributeAlgo = data().deepCopy(fields()[7].schema(), other.distributeAlgo);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.description)) {
        this.description = data().deepCopy(fields()[8].schema(), other.description);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'host' field */
    public java.lang.CharSequence getHost() {
      return host;
    }
    
    /** Sets the value of the 'host' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder setHost(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.host = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'host' field has been set */
    public boolean hasHost() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'host' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder clearHost() {
      host = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder setType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'type' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'protocol' field */
    public java.lang.CharSequence getProtocol() {
      return protocol;
    }
    
    /** Sets the value of the 'protocol' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder setProtocol(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.protocol = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'protocol' field has been set */
    public boolean hasProtocol() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'protocol' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder clearProtocol() {
      protocol = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'implement' field */
    public java.lang.CharSequence getImplement() {
      return implement;
    }
    
    /** Sets the value of the 'implement' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder setImplement(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.implement = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'implement' field has been set */
    public boolean hasImplement() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'implement' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder clearImplement() {
      implement = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'port' field */
    public java.lang.Integer getPort() {
      return port;
    }
    
    /** Sets the value of the 'port' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder setPort(java.lang.Integer value) {
      validate(fields()[5], value);
      this.port = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'port' field has been set */
    public boolean hasPort() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'port' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder clearPort() {
      port = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'schedule' field */
    public java.lang.CharSequence getSchedule() {
      return schedule;
    }
    
    /** Sets the value of the 'schedule' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder setSchedule(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.schedule = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'schedule' field has been set */
    public boolean hasSchedule() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'schedule' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder clearSchedule() {
      schedule = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'distributeAlgo' field */
    public java.lang.CharSequence getDistributeAlgo() {
      return distributeAlgo;
    }
    
    /** Sets the value of the 'distributeAlgo' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder setDistributeAlgo(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.distributeAlgo = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'distributeAlgo' field has been set */
    public boolean hasDistributeAlgo() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'distributeAlgo' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder clearDistributeAlgo() {
      distributeAlgo = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.description = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'description' field */
    public me.littlepanda.dadbear.core.rpc.ServiceInfo.Builder clearDescription() {
      description = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public ServiceInfo build() {
      try {
        ServiceInfo record = new ServiceInfo();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.host = fieldSetFlags()[1] ? this.host : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.protocol = fieldSetFlags()[3] ? this.protocol : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.implement = fieldSetFlags()[4] ? this.implement : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.port = fieldSetFlags()[5] ? this.port : (java.lang.Integer) defaultValue(fields()[5]);
        record.schedule = fieldSetFlags()[6] ? this.schedule : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.distributeAlgo = fieldSetFlags()[7] ? this.distributeAlgo : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.description = fieldSetFlags()[8] ? this.description : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
